plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}


def useLocalYungsApi = findProject(':yungsapi') != null

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = "https://maven.terraformersmc.com/releases/" }
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		name = 'Sponge / Mixin'
		url = 'https://repo.spongepowered.org/repository/maven-public/'
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()

	// YUNG's API
	if (useLocalYungsApi) {
		modImplementation files("libs/YungsApi-${mc_version}-Fabric-${yungsapi_version}.jar")
	} else {
		modImplementation "com.yungnickyoung.minecraft.yungsapi:YungsApi:${mc_version}-Fabric-${yungsapi_version}"
	}
	implementation("org.reflections:reflections:0.10.2")
	include("org.reflections:reflections:0.10.2")


	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "maven.modrinth:paxi:1.20-Fabric-4.0"
	//compileOnly group:'org.spongepowered', name:'mixin', version:'0.8.5'
	annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

loom {
	mixin {
		defaultRefmapName = "paxifix.refmap.json"
	}
	runs {
		client {
			property 'mixin.env.remapRefMap', 'true'
		}
		server {
			property 'mixin.env.remapRefMap', 'true'
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}